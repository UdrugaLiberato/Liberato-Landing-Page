{"version":3,"sources":["components/Layout/Topbar.js","components/Layout/Footer.js","components/Layout/index.js","App.js","serviceWorker.js","index.js"],"names":["Topbar","props","state","Fragment","id","className","to","duration","smooth","target","href","style","display","offset","Component","withRouter","FooterWithoutMenu","Row","Col","sm","Date","getFullYear","title","Layout","document","getElementById","setTimeout","this","children","Footer","ContainerClassName","index","React","lazy","App","Suspense","fallback","path","component","WrappedComponent","Boolean","window","location","hostname","match","app","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oRAIMA,E,YACL,WAAYC,GAAQ,IAAD,8BAClB,4CAAMA,KACDC,MAAQ,GAFK,E,sEAMlB,OACC,kBAAC,IAAMC,SAAP,KACC,4BAAQC,GAAG,SAASC,UAAU,wBAC7B,yBAAKA,UAAU,aACd,6BACC,kBAAC,OAAD,CAAQA,UAAU,OAAOC,GAAG,OAAOC,SAAU,IAAKC,QAAQ,GAA1D,WACS,0BAAMH,UAAU,gBAAhB,OAGV,yBAAKA,UAAU,cACd,uBACCI,OAAO,SACPC,KAAK,2CACLL,UAAU,mBAHX,mBASD,yBAAKD,GAAG,aAAaO,MAAO,CAAEC,QAAS,SACtC,wBAAIP,UAAU,kBAAkBD,GAAG,YAClC,4BACC,kBAAC,OAAD,CAAQE,GAAG,OAAOE,QAAQ,EAAMD,SAAU,KAA1C,SAID,4BACC,kBAAC,OAAD,CAAQD,GAAG,eAAeE,QAAQ,EAAMD,SAAU,KAAlD,cAcD,4BACC,kBAAC,OAAD,CAAQD,GAAG,OAAOE,QAAQ,EAAMD,SAAU,KAA1C,QAID,4BACC,kBAAC,OAAD,CAAQD,GAAG,UAAUE,QAAQ,EAAMD,SAAU,IAAKM,QAAS,KAA3D,qB,GAtDYC,aAmENC,cAAWf,G,gBC5BXgB,E,YArCb,WAAYf,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,GAFI,E,sEAMjB,OACE,kBAAC,IAAMC,SAAP,KACE,4BAAQE,UAAU,qBACd,yBAAKA,UAAU,yBACX,kBAACY,EAAA,EAAD,CAAKZ,UAAU,sBACX,kBAACa,EAAA,EAAD,CAAKC,GAAI,GACL,yBAAKd,UAAU,gBAAf,SACQ,IAAIe,MAAOC,cADnB,8BAC4D,0BAAMhB,UAAU,eAAhB,UAD5D,MAKJ,kBAACa,EAAA,EAAD,CAAKC,GAAI,EAAGd,UAAU,6BAClC,wBAAIA,UAAU,uDACb,wBAAIA,UAAU,oBACb,uBACCI,OAAO,SACPC,KAAK,4CAEL,uBAAGL,UAAU,mBAAmBiB,MAAM,yB,GA1BjBR,a,QCM1BS,E,YACL,WAAYtB,GAAQ,IAAD,8BAClB,4CAAMA,KACDC,MAAQ,GAFK,E,iFAMlBsB,SAASC,eAAe,cAAcd,MAAMC,QAAU,QACtDc,YAAW,WACVF,SAASC,eAAe,cAAcd,MAAMC,QAAU,SACpD,O,+BAIH,OACC,kBAAC,IAAMT,SAAP,KACC,kBAAC,EAAD,MACCwB,KAAK1B,MAAM2B,SACZ,kBAACC,EAAD,MACA,yBAAKzB,GAAG,cACP,kBAAC,aAAD,CAAgB0B,mBAAmB,0C,GApBnBhB,aA2BNC,cAAWQ,G,QCxBpBQ,G,YAAQC,IAAMC,MAAK,kBAAM,uD,IAezBC,E,iLAEJ,OACC,kBAAC,IAAM/B,SAAP,KACC,kBAAC,IAAD,KACC,kBAAC,IAAMgC,SAAP,CAAgBC,SAAU,+BACzB,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,KAAK,IAAIC,WApBHC,EAoByBR,EAlB5C,iLAEE,OACC,kBAAC,EAAD,KACC,kBAACQ,EAAD,WAJJ,EAAM,CAAeP,IAAMlB,kBAF5B,IAAoByB,M,GAaFzB,aAgBHC,cAAWmB,GChCNM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZN,IAAMC,EACE,kBAAC,IAAD,KACI,kBAAC,EAAD,OAIZC,IAASC,OAAOF,EAAKrB,SAASC,eAAe,SDqHvC,kBAAmBuB,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f84dcc1e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link as Scroll } from 'react-scroll';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass Topbar extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<header id=\"topnav\" className=\"defaultscroll sticky\">\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Scroll className=\"logo\" to=\"home\" duration={500} smooth={true}>\r\n\t\t\t\t\t\t\t\tLiberato<span className=\"text-primary\">.</span>\r\n\t\t\t\t\t\t\t</Scroll>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"buy-button\">\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\thref=\"https://www.facebook.com/UdrugaLiberato/\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tGo to Facebook\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div id=\"navigation\" style={{ display: 'none' }}>\r\n\t\t\t\t\t\t\t<ul className=\"navigation-menu\" id=\"top-menu\">\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Scroll to=\"home\" smooth={true} duration={500}>\r\n\t\t\t\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t\t\t\t</Scroll>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Scroll to=\"how-it-works\" smooth={true} duration={500}>\r\n\t\t\t\t\t\t\t\t\t\tKako radi\r\n\t\t\t\t\t\t\t\t\t</Scroll>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t{/* <li>\r\n\t\t\t\t\t\t\t\t\t<Scroll\r\n\t\t\t\t\t\t\t\t\t\tto=\"partners\"\r\n\t\t\t\t\t\t\t\t\t\toffset={-150}\r\n\t\t\t\t\t\t\t\t\t\tsmooth={true}\r\n\t\t\t\t\t\t\t\t\t\tduration={500}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tPartneri\r\n\t\t\t\t\t\t\t\t\t</Scroll>\r\n\t\t\t\t\t\t\t\t</li> */}\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Scroll to=\"team\" smooth={true} duration={500}>\r\n\t\t\t\t\t\t\t\t\t\tTim\r\n\t\t\t\t\t\t\t\t\t</Scroll>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Scroll to=\"contact\" smooth={true} duration={500} offset={-550}>\r\n\t\t\t\t\t\t\t\t\t\tKontakt\r\n\t\t\t\t\t\t\t\t\t</Scroll>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</header>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(Topbar);\r\n","import React, { Component } from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n \r\n\r\nclass FooterWithoutMenu extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <footer className=\"footer footer-bar\">\r\n            <div className=\"container text-center\">\r\n                <Row className=\"align-items-center\">\r\n                    <Col sm={6}>\r\n                        <div className=\"text-sm-left\">\r\n                            \tÂ© {new Date().getFullYear()} Liberato. From Split with <span className=\"text-danger\">&hearts;</span>.\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col sm={6} className=\"mt-4 mt-sm-0 pt-2 pt-sm-0\">\r\n\t\t\t\t\t\t\t\t<ul className=\"list-unstyled social-icon social mb-0 text-sm-right\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"list-inline-item\">\r\n\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\thref=\"https://www.facebook.com/UdrugaLiberato/\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"mdi mdi-facebook\" title=\"Facebook\"></i>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </footer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FooterWithoutMenu;\r\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n// Layout Components\nimport Topbar from './Topbar';\nimport Footer from './Footer';\n\n// Scroll up button\nimport { TinyButton as ScrollUpButton } from 'react-scroll-up-button';\n\nclass Layout extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.getElementById('pageLoader').style.display = 'block';\n\t\tsetTimeout(function() {\n\t\t\tdocument.getElementById('pageLoader').style.display = 'none';\n\t\t}, 1000);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Topbar />\n\t\t\t\t{this.props.children}\n\t\t\t\t<Footer />\n\t\t\t\t<div id=\"bottomIcon\">\n\t\t\t\t\t<ScrollUpButton ContainerClassName=\"back-to-top rounded text-center\" />\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default withRouter(Layout);\n","import React, { Component } from 'react';\nimport Layout from './components/Layout/';\nimport {\n\tRoute,\n\tSwitch,\n\tBrowserRouter as Router,\n\twithRouter,\n} from 'react-router-dom';\n\n// Import Css\nimport './Apps.scss';\nimport './css/materialdesignicons.min.css';\n\nconst index = React.lazy(() => import('./pages/index'));\n\nfunction withLayout(WrappedComponent) {\n\t// ...and returns another component...\n\treturn class extends React.Component {\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<Layout>\n\t\t\t\t\t<WrappedComponent></WrappedComponent>\n\t\t\t\t</Layout>\n\t\t\t);\n\t\t}\n\t};\n}\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Router>\n\t\t\t\t\t<React.Suspense fallback={<div></div>}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/\" component={withLayout(index)} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</React.Suspense>\n\t\t\t\t</Router>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst app = (\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}